{"mappings":"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","sources":["src/d3ScatterPlot.js"],"sourcesContent":["/**\r\n * Created by Rick on 2022-04-18.\r\n */\r\n'use strict';\r\n\r\nimport {select} from 'd3-selection';\r\nimport {scaleLinear} from 'd3-scale';\r\nimport {extent, max, nice} from 'd3-array';\r\nimport {axisBottom, axisLeft} from 'd3-axis';\r\n\r\nexport default class d3ScatterPlot{\r\n  /**\r\n   * The width of the chart in pixels.\r\n   * @type {number}\r\n   */\r\n  width = 800;\r\n  /**\r\n   * The height of the chart in pixels.\r\n   * @type {number}\r\n   */\r\n  height = 650;\r\n  /**\r\n   * The left margin of the chart in pixels\r\n   * @type {number}\r\n   */\r\n  margin_left = 60;\r\n  /**\r\n   * The top margin of the table in pixels.\r\n   * @type {number}\r\n   */\r\n  margin_top = 30;\r\n  /**\r\n   * The bottom margin of the chart in pixels.\r\n   * @type {number}\r\n   */\r\n  margin_bottom = 50;\r\n  /**\r\n   * An array that sets the tics values for x axis\r\n   * @type {number}\r\n   */\r\n  /**\r\n   * The table's title\r\n   * @type {string}\r\n   */\r\n  title = undefined\r\n  /**\r\n   * The table's subtitle\r\n   * @type {string}\r\n   */\r\n  sub_title = undefined\r\n  /**\r\n   * An array of string column headers\r\n   * @type {string}\r\n   */\r\n  x_tics = undefined\r\n  /**\r\n   * The x axis label.\r\n   * @type {string}\r\n   */\r\n  x_label = ''\r\n  /**\r\n   * An array that sets the tics values for y axis\r\n   * @type {number}\r\n   */\r\n  y_tics = undefined\r\n  /**\r\n   * The y axis label.\r\n   * @type {string}\r\n   */\r\n  y_label = ''\r\n  /**\r\n   * The color for labels\r\n   * @type {string}\r\n   */\r\n  label_color = 'black'\r\n  /**\r\n   * The radius of the plotted points\r\n   * @type {number}\r\n   */\r\n  point_radius = 5\r\n  /**\r\n   * The fill color for the points\r\n   * @type {string}\r\n   */\r\n  point_fill = '#69b3a2'\r\n\r\n  /**\r\n   * The constructor for d3ScatterPlot\r\n   * @param {string} chart_id The DOM element id where the chart will be located\r\n   * @param {array} data An array of Objects\r\n   * @param {string} x_var The name of the variable from the data array\r\n   * @param {string} y_var The name of the variable from the data array\r\n   */\r\n  constructor(\r\n    chart_id,\r\n    data,\r\n    x_var,\r\n    y_var\r\n  ) {\r\n    if(chart_id === undefined){\r\n      throw(new ReferenceError('chart_id argument must be defined.'))\r\n    }else{\r\n      this.chart_id = chart_id;\r\n    }\r\n\r\n    if(data === undefined){\r\n      throw(new ReferenceError('data argument must be defined.'))\r\n    }else{\r\n      this.data = data;\r\n    }\r\n\r\n    if(x_var === undefined){\r\n      throw(new ReferenceError('x_var argument must be defined.'))\r\n    }else {\r\n      this.xAccessor = (d) => +d[x_var];\r\n    }\r\n\r\n    if(y_var === undefined){\r\n      throw(new ReferenceError('y_var argument must be defined.'))\r\n    }else {\r\n      this.yAccessor = (d) => +d[y_var];\r\n    }\r\n\r\n    this.x_extent = extent(this.data, this.xAccessor)\r\n    this.y_extent = extent(this.data, this.yAccessor)\r\n  }\r\n\r\n  draw() {\r\n    const dimensions = {\r\n      width: this.width,\r\n      height: this.height,\r\n      margin: {\r\n        top: this.margin_top,\r\n        bottom: this.margin_bottom,\r\n        left: this.margin_left,\r\n        right: 10\r\n      }\r\n    }\r\n\r\n    const svg = select('#' + this.chart_id)\r\n      .append('svg')\r\n      .attr('width', dimensions.width)\r\n      .attr('height', dimensions.height);\r\n\r\n    let currrent_y = 0;\r\n\r\n    if(this.title !== undefined){\r\n      currrent_y = currrent_y + 20;\r\n      svg.append('text')\r\n        .attr('x', dimensions.width / 2)\r\n        .attr('y', currrent_y)\r\n        .text(this.title)\r\n        .style('text-anchor', 'middle')\r\n        .style('font-size', '28px')\r\n        .style('font-weight', 'bold')\r\n    }\r\n    if(this.sub_title !== undefined){\r\n      currrent_y = currrent_y + 25;\r\n      svg.append('text')\r\n        .attr('x', dimensions.width / 2)\r\n        .attr('y', currrent_y)\r\n        .text(this.sub_title)\r\n        .style('text-anchor', 'middle')\r\n        .style('font-size', '20px')\r\n        .style('font-weight', 'bold')\r\n    }\r\n\r\n    dimensions.ctrWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\r\n    dimensions.ctrHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom - currrent_y;\r\n\r\n    const ctr = svg.append('g')\r\n      .attr(\r\n        'transform',\r\n        `translate(${dimensions.margin.left}, ${currrent_y + dimensions.margin.top})`)\r\n\r\n    // X axis: scale and draw\r\n    let xScale;\r\n    let xAxisGroup;\r\n    if(this.x_tics === undefined) {\r\n      xScale = scaleLinear()\r\n        .domain(this.x_extent)\r\n        .rangeRound([0, dimensions.ctrWidth]);\r\n      xAxisGroup = ctr.append('g')\r\n        .call(axisBottom(xScale))\r\n        .style('transform', `translateY(${dimensions.ctrHeight}px)`);\r\n    }else {\r\n      const idx = this.x_tics.length - 1;\r\n      xScale = scaleLinear()\r\n        .domain([this.x_tics[0], this.x_tics[idx]])\r\n        .rangeRound([0, dimensions.ctrWidth]);\r\n      const xAxis = axisBottom(xScale)\r\n        .tickValues(this.x_tics);\r\n      xAxisGroup = ctr.append('g')\r\n        .call(xAxis)\r\n        .style('transform', `translateY(${dimensions.ctrHeight}px)`);\r\n    }\r\n    xAxisGroup.append('text')\r\n      .attr('x', dimensions.ctrWidth / 2)\r\n      .attr('y', dimensions.margin.bottom - 10)\r\n      .attr('fill', this.label_color)\r\n      .text(this.x_label)\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n\r\n    // Y axis: scale and draw\r\n    let yScale;\r\n    let yAxisGroup;\r\n    if(this.y_tics === undefined) {\r\n      yScale = scaleLinear()\r\n        .domain(this.y_extent)\r\n        .rangeRound([dimensions.ctrHeight, 0]);\r\n      yAxisGroup = ctr.append('g')\r\n        .call(axisLeft(yScale));\r\n    }else {\r\n      const idx = this.y_tics.length - 1;\r\n      yScale = scaleLinear()\r\n        .domain([this.y_tics[0], this.y_tics[idx]])\r\n        .range([dimensions.ctrHeight, 0]);\r\n      const yAxis = axisLeft(yScale)\r\n        .tickValues(this.y_tics);\r\n      yAxisGroup = ctr.append('g')\r\n        .call(yAxis);\r\n    }\r\n    yAxisGroup.append('text')\r\n      .attr('x', -dimensions.ctrHeight / 2)\r\n      .attr('y', -dimensions.margin.left + 15)\r\n      .attr('fill', this.label_color)\r\n      .text(this.y_label)\r\n      .style('transform', 'rotate(270deg)')\r\n      .style('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n\r\n    // Draw circles\r\n    ctr.selectAll('circle')\r\n      .data(this.data)\r\n      .join('circle')\r\n      .attr('cx', d => xScale(this.xAccessor(d)))\r\n      .attr('cy', d => yScale(this.yAccessor(d)))\r\n      .attr('r', this.point_radius)\r\n      .attr('fill', this.point_fill)\r\n\r\n    return {\r\n      'data_extent_x': this.x_extent,\r\n      'data_extent_y': this.y_extent\r\n    }\r\n  }\r\n}"],"names":[],"version":3,"file":"d3ScatterPlot_min.js.map"}